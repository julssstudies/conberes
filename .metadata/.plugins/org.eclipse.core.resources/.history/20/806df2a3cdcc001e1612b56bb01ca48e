package CC_03;

public class CC_03_MutexEA {
	static final int N_OPS = 1000;
	static volatile int x = 0;
	static volatile boolean scInc = false; 
	static volatile boolean scDec = false;
	
	static class Inc extends Thread {
		public void run() {
			for (int i = 0; i < N_OPS; i++) {
				scInc = true;
				while (scDec) { }
				while (scInc) {
					System.out.println("Hola");
					x = x + 1;
					scInc = false;
				}
				
			}
		}
	}
	
	static class Dec extends Thread {
		public void run() {
			for (int i = 0; i < N_OPS; i++) {
				scDec = true;
				while (scInc) { }
				while (scDec) {
					x = x - 1;
					scDec = false;
				}
				
			}
		}
	}
	
	public static void main(String[] args)
			throws InterruptedException {
		Thread i = new Inc();
		Thread d = new Dec();
		i.start(); d.start();
		i.join(); d.join();
		System.out.println(x);
	}
}